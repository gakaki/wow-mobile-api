<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wow.page.mapper.PageProductConfigMapper" >
  <resultMap id="BaseResultMap" type="com.wow.page.model.PageProductConfig" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="page_type" property="pageType" jdbcType="TINYINT" />
    <result column="page_module_type" property="pageModuleType" jdbcType="TINYINT" />
    <result column="product_id" property="productId" jdbcType="INTEGER" />
    <result column="product_img" property="productImg" jdbcType="VARCHAR" />
    <result column="location_sort" property="locationSort" jdbcType="TINYINT" />
    <result column="valid_from" property="validFrom" jdbcType="TIMESTAMP" />
    <result column="valid_to" property="validTo" jdbcType="TIMESTAMP" />
    <result column="is_enabled" property="isEnabled" jdbcType="BIT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, page_type, page_module_type, product_id, product_img, location_sort, valid_from, 
    valid_to, is_enabled
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.wow.page.model.PageProductConfigExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from page_product_config
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from page_product_config
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from page_product_config
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.wow.page.model.PageProductConfigExample" >
    delete from page_product_config
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.wow.page.model.PageProductConfig" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into page_product_config (page_type, page_module_type, product_id, 
      product_img, location_sort, valid_from, 
      valid_to, is_enabled)
    values (#{pageType,jdbcType=TINYINT}, #{pageModuleType,jdbcType=TINYINT}, #{productId,jdbcType=INTEGER}, 
      #{productImg,jdbcType=VARCHAR}, #{locationSort,jdbcType=TINYINT}, #{validFrom,jdbcType=TIMESTAMP}, 
      #{validTo,jdbcType=TIMESTAMP}, #{isEnabled,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.wow.page.model.PageProductConfig" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into page_product_config
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="pageType != null" >
        page_type,
      </if>
      <if test="pageModuleType != null" >
        page_module_type,
      </if>
      <if test="productId != null" >
        product_id,
      </if>
      <if test="productImg != null" >
        product_img,
      </if>
      <if test="locationSort != null" >
        location_sort,
      </if>
      <if test="validFrom != null" >
        valid_from,
      </if>
      <if test="validTo != null" >
        valid_to,
      </if>
      <if test="isEnabled != null" >
        is_enabled,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="pageType != null" >
        #{pageType,jdbcType=TINYINT},
      </if>
      <if test="pageModuleType != null" >
        #{pageModuleType,jdbcType=TINYINT},
      </if>
      <if test="productId != null" >
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="productImg != null" >
        #{productImg,jdbcType=VARCHAR},
      </if>
      <if test="locationSort != null" >
        #{locationSort,jdbcType=TINYINT},
      </if>
      <if test="validFrom != null" >
        #{validFrom,jdbcType=TIMESTAMP},
      </if>
      <if test="validTo != null" >
        #{validTo,jdbcType=TIMESTAMP},
      </if>
      <if test="isEnabled != null" >
        #{isEnabled,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wow.page.model.PageProductConfigExample" resultType="java.lang.Integer" >
    select count(*) from page_product_config
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update page_product_config
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.pageType != null" >
        page_type = #{record.pageType,jdbcType=TINYINT},
      </if>
      <if test="record.pageModuleType != null" >
        page_module_type = #{record.pageModuleType,jdbcType=TINYINT},
      </if>
      <if test="record.productId != null" >
        product_id = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.productImg != null" >
        product_img = #{record.productImg,jdbcType=VARCHAR},
      </if>
      <if test="record.locationSort != null" >
        location_sort = #{record.locationSort,jdbcType=TINYINT},
      </if>
      <if test="record.validFrom != null" >
        valid_from = #{record.validFrom,jdbcType=TIMESTAMP},
      </if>
      <if test="record.validTo != null" >
        valid_to = #{record.validTo,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isEnabled != null" >
        is_enabled = #{record.isEnabled,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update page_product_config
    set id = #{record.id,jdbcType=INTEGER},
      page_type = #{record.pageType,jdbcType=TINYINT},
      page_module_type = #{record.pageModuleType,jdbcType=TINYINT},
      product_id = #{record.productId,jdbcType=INTEGER},
      product_img = #{record.productImg,jdbcType=VARCHAR},
      location_sort = #{record.locationSort,jdbcType=TINYINT},
      valid_from = #{record.validFrom,jdbcType=TIMESTAMP},
      valid_to = #{record.validTo,jdbcType=TIMESTAMP},
      is_enabled = #{record.isEnabled,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.wow.page.model.PageProductConfig" >
    update page_product_config
    <set >
      <if test="pageType != null" >
        page_type = #{pageType,jdbcType=TINYINT},
      </if>
      <if test="pageModuleType != null" >
        page_module_type = #{pageModuleType,jdbcType=TINYINT},
      </if>
      <if test="productId != null" >
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="productImg != null" >
        product_img = #{productImg,jdbcType=VARCHAR},
      </if>
      <if test="locationSort != null" >
        location_sort = #{locationSort,jdbcType=TINYINT},
      </if>
      <if test="validFrom != null" >
        valid_from = #{validFrom,jdbcType=TIMESTAMP},
      </if>
      <if test="validTo != null" >
        valid_to = #{validTo,jdbcType=TIMESTAMP},
      </if>
      <if test="isEnabled != null" >
        is_enabled = #{isEnabled,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wow.page.model.PageProductConfig" >
    update page_product_config
    set page_type = #{pageType,jdbcType=TINYINT},
      page_module_type = #{pageModuleType,jdbcType=TINYINT},
      product_id = #{productId,jdbcType=INTEGER},
      product_img = #{productImg,jdbcType=VARCHAR},
      location_sort = #{locationSort,jdbcType=TINYINT},
      valid_from = #{validFrom,jdbcType=TIMESTAMP},
      valid_to = #{validTo,jdbcType=TIMESTAMP},
      is_enabled = #{isEnabled,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectByPageType" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from page_product_config
    where page_type = #{pageType,jdbcType=TINYINT}
  </select>

  <select id="selectFindPageProduct" resultType="com.wow.page.vo.PageProductVo" parameterType="java.lang.Integer" >
    select
    	ppc.product_id as productId,p.product_name as productName,ppc.product_img as productImg,p.detail_description as detailDescription,ppc.page_module_type as pageModuleType
    from page_product_config ppc
    inner join product p on p.id=ppc.product_id
    where ppc.page_type = #{pageType,jdbcType=TINYINT}
  </select>
</mapper>