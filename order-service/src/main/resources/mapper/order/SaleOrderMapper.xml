<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wow.order.mapper.SaleOrderMapper">
  <resultMap id="BaseResultMap" type="com.wow.order.model.SaleOrder">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="order_code" jdbcType="VARCHAR" property="orderCode" />
    <result column="end_user_id" jdbcType="INTEGER" property="endUserId" />
    <result column="product_amount" jdbcType="DECIMAL" property="productAmount" />
    <result column="delivery_fee" jdbcType="DECIMAL" property="deliveryFee" />
    <result column="order_amount" jdbcType="DECIMAL" property="orderAmount" />
    <result column="total_product_qty" jdbcType="INTEGER" property="totalProductQty" />
    <result column="un_ship_out_qty" jdbcType="INTEGER" property="unShipOutQty" />
    <result column="receiver_name" jdbcType="VARCHAR" property="receiverName" />
    <result column="receiver_province" jdbcType="VARCHAR" property="receiverProvince" />
    <result column="receiver_city" jdbcType="VARCHAR" property="receiverCity" />
    <result column="receiver_county" jdbcType="VARCHAR" property="receiverCounty" />
    <result column="receiver_town" jdbcType="VARCHAR" property="receiverTown" />
    <result column="receiver_address" jdbcType="VARCHAR" property="receiverAddress" />
    <result column="receiver_postcode" jdbcType="CHAR" property="receiverPostcode" />
    <result column="receiver_mobile" jdbcType="VARCHAR" property="receiverMobile" />
    <result column="end_user_remark" jdbcType="VARCHAR" property="endUserRemark" />
    <result column="order_status" jdbcType="TINYINT" property="orderStatus" />
    <result column="payment_status" jdbcType="TINYINT" property="paymentStatus" />
    <result column="payment_method" jdbcType="TINYINT" property="paymentMethod" />
    <result column="paid_time" jdbcType="TIMESTAMP" property="paidTime" />
    <result column="is_use_coupon" jdbcType="BIT" property="isUseCoupon" />
    <result column="preferential_amount" jdbcType="DECIMAL" property="preferentialAmount" />
    <result column="end_user_coupon_id" jdbcType="INTEGER" property="endUserCouponId" />
    <result column="cancel_request_time" jdbcType="TIMESTAMP" property="cancelRequestTime" />
    <result column="cancel_reason" jdbcType="VARCHAR" property="cancelReason" />
    <result column="cancel_approved_time" jdbcType="TIMESTAMP" property="cancelApprovedTime" />
    <result column="refund_approval_status" jdbcType="TINYINT" property="refundApprovalStatus" />
    <result column="refund_approval_time" jdbcType="TIMESTAMP" property="refundApprovalTime" />
    <result column="operator_name" jdbcType="VARCHAR" property="operatorName" />
    <result column="order_source" jdbcType="TINYINT" property="orderSource" />
    <result column="order_ip" jdbcType="BIGINT" property="orderIp" />
    <result column="seller_remark" jdbcType="VARCHAR" property="sellerRemark" />
    <result column="order_create_time" jdbcType="TIMESTAMP" property="orderCreateTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, order_code, end_user_id, product_amount, delivery_fee, order_amount, total_product_qty, 
    un_ship_out_qty, receiver_name, receiver_province, receiver_city, receiver_county, 
    receiver_town, receiver_address, receiver_postcode, receiver_mobile, end_user_remark, 
    order_status, payment_status, payment_method, paid_time, is_use_coupon, preferential_amount, 
    end_user_coupon_id, cancel_request_time, cancel_reason, cancel_approved_time, refund_approval_status, 
    refund_approval_time, operator_name, order_source, order_ip, seller_remark, order_create_time, 
    update_time
  </sql>
  <select id="selectByExample" parameterType="com.wow.order.model.SaleOrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sale_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectOnlyByExample"  parameterType="com.wow.order.model.SaleOrderExample" resultMap="BaseResultMap">
	    select
	    <include refid="Base_Column_List" />
	    from sale_order
	    <if test="_parameter != null">
	      <include refid="Example_Where_Clause" />
	    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sale_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sale_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.wow.order.model.SaleOrderExample">
    delete from sale_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.wow.order.model.SaleOrder">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sale_order (order_code, end_user_id, product_amount, 
      delivery_fee, order_amount, total_product_qty, 
      un_ship_out_qty, receiver_name, receiver_province, 
      receiver_city, receiver_county, receiver_town, 
      receiver_address, receiver_postcode, receiver_mobile, 
      end_user_remark, order_status, payment_status, 
      payment_method, paid_time, is_use_coupon, 
      preferential_amount, end_user_coupon_id, cancel_request_time, 
      cancel_reason, cancel_approved_time, refund_approval_status, 
      refund_approval_time, operator_name, order_source, 
      order_ip, seller_remark, order_create_time, 
      update_time)
    values (#{orderCode,jdbcType=VARCHAR}, #{endUserId,jdbcType=INTEGER}, #{productAmount,jdbcType=DECIMAL}, 
      #{deliveryFee,jdbcType=DECIMAL}, #{orderAmount,jdbcType=DECIMAL}, #{totalProductQty,jdbcType=INTEGER}, 
      #{unShipOutQty,jdbcType=INTEGER}, #{receiverName,jdbcType=VARCHAR}, #{receiverProvince,jdbcType=VARCHAR}, 
      #{receiverCity,jdbcType=VARCHAR}, #{receiverCounty,jdbcType=VARCHAR}, #{receiverTown,jdbcType=VARCHAR}, 
      #{receiverAddress,jdbcType=VARCHAR}, #{receiverPostcode,jdbcType=CHAR}, #{receiverMobile,jdbcType=VARCHAR}, 
      #{endUserRemark,jdbcType=VARCHAR}, #{orderStatus,jdbcType=TINYINT}, #{paymentStatus,jdbcType=TINYINT}, 
      #{paymentMethod,jdbcType=TINYINT}, #{paidTime,jdbcType=TIMESTAMP}, #{isUseCoupon,jdbcType=BIT}, 
      #{preferentialAmount,jdbcType=DECIMAL}, #{endUserCouponId,jdbcType=INTEGER}, #{cancelRequestTime,jdbcType=TIMESTAMP}, 
      #{cancelReason,jdbcType=VARCHAR}, #{cancelApprovedTime,jdbcType=TIMESTAMP}, #{refundApprovalStatus,jdbcType=TINYINT}, 
      #{refundApprovalTime,jdbcType=TIMESTAMP}, #{operatorName,jdbcType=VARCHAR}, #{orderSource,jdbcType=TINYINT}, 
      #{orderIp,jdbcType=BIGINT}, #{sellerRemark,jdbcType=VARCHAR}, #{orderCreateTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.wow.order.model.SaleOrder">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sale_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderCode != null">
        order_code,
      </if>
      <if test="endUserId != null">
        end_user_id,
      </if>
      <if test="productAmount != null">
        product_amount,
      </if>
      <if test="deliveryFee != null">
        delivery_fee,
      </if>
      <if test="orderAmount != null">
        order_amount,
      </if>
      <if test="totalProductQty != null">
        total_product_qty,
      </if>
      <if test="unShipOutQty != null">
        un_ship_out_qty,
      </if>
      <if test="receiverName != null">
        receiver_name,
      </if>
      <if test="receiverProvince != null">
        receiver_province,
      </if>
      <if test="receiverCity != null">
        receiver_city,
      </if>
      <if test="receiverCounty != null">
        receiver_county,
      </if>
      <if test="receiverTown != null">
        receiver_town,
      </if>
      <if test="receiverAddress != null">
        receiver_address,
      </if>
      <if test="receiverPostcode != null">
        receiver_postcode,
      </if>
      <if test="receiverMobile != null">
        receiver_mobile,
      </if>
      <if test="endUserRemark != null">
        end_user_remark,
      </if>
      <if test="orderStatus != null">
        order_status,
      </if>
      <if test="paymentStatus != null">
        payment_status,
      </if>
      <if test="paymentMethod != null">
        payment_method,
      </if>
      <if test="paidTime != null">
        paid_time,
      </if>
      <if test="isUseCoupon != null">
        is_use_coupon,
      </if>
      <if test="preferentialAmount != null">
        preferential_amount,
      </if>
      <if test="endUserCouponId != null">
        end_user_coupon_id,
      </if>
      <if test="cancelRequestTime != null">
        cancel_request_time,
      </if>
      <if test="cancelReason != null">
        cancel_reason,
      </if>
      <if test="cancelApprovedTime != null">
        cancel_approved_time,
      </if>
      <if test="refundApprovalStatus != null">
        refund_approval_status,
      </if>
      <if test="refundApprovalTime != null">
        refund_approval_time,
      </if>
      <if test="operatorName != null">
        operator_name,
      </if>
      <if test="orderSource != null">
        order_source,
      </if>
      <if test="orderIp != null">
        order_ip,
      </if>
      <if test="sellerRemark != null">
        seller_remark,
      </if>
      <if test="orderCreateTime != null">
        order_create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderCode != null">
        #{orderCode,jdbcType=VARCHAR},
      </if>
      <if test="endUserId != null">
        #{endUserId,jdbcType=INTEGER},
      </if>
      <if test="productAmount != null">
        #{productAmount,jdbcType=DECIMAL},
      </if>
      <if test="deliveryFee != null">
        #{deliveryFee,jdbcType=DECIMAL},
      </if>
      <if test="orderAmount != null">
        #{orderAmount,jdbcType=DECIMAL},
      </if>
      <if test="totalProductQty != null">
        #{totalProductQty,jdbcType=INTEGER},
      </if>
      <if test="unShipOutQty != null">
        #{unShipOutQty,jdbcType=INTEGER},
      </if>
      <if test="receiverName != null">
        #{receiverName,jdbcType=VARCHAR},
      </if>
      <if test="receiverProvince != null">
        #{receiverProvince,jdbcType=VARCHAR},
      </if>
      <if test="receiverCity != null">
        #{receiverCity,jdbcType=VARCHAR},
      </if>
      <if test="receiverCounty != null">
        #{receiverCounty,jdbcType=VARCHAR},
      </if>
      <if test="receiverTown != null">
        #{receiverTown,jdbcType=VARCHAR},
      </if>
      <if test="receiverAddress != null">
        #{receiverAddress,jdbcType=VARCHAR},
      </if>
      <if test="receiverPostcode != null">
        #{receiverPostcode,jdbcType=CHAR},
      </if>
      <if test="receiverMobile != null">
        #{receiverMobile,jdbcType=VARCHAR},
      </if>
      <if test="endUserRemark != null">
        #{endUserRemark,jdbcType=VARCHAR},
      </if>
      <if test="orderStatus != null">
        #{orderStatus,jdbcType=TINYINT},
      </if>
      <if test="paymentStatus != null">
        #{paymentStatus,jdbcType=TINYINT},
      </if>
      <if test="paymentMethod != null">
        #{paymentMethod,jdbcType=TINYINT},
      </if>
      <if test="paidTime != null">
        #{paidTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isUseCoupon != null">
        #{isUseCoupon,jdbcType=BIT},
      </if>
      <if test="preferentialAmount != null">
        #{preferentialAmount,jdbcType=DECIMAL},
      </if>
      <if test="endUserCouponId != null">
        #{endUserCouponId,jdbcType=INTEGER},
      </if>
      <if test="cancelRequestTime != null">
        #{cancelRequestTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cancelReason != null">
        #{cancelReason,jdbcType=VARCHAR},
      </if>
      <if test="cancelApprovedTime != null">
        #{cancelApprovedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="refundApprovalStatus != null">
        #{refundApprovalStatus,jdbcType=TINYINT},
      </if>
      <if test="refundApprovalTime != null">
        #{refundApprovalTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operatorName != null">
        #{operatorName,jdbcType=VARCHAR},
      </if>
      <if test="orderSource != null">
        #{orderSource,jdbcType=TINYINT},
      </if>
      <if test="orderIp != null">
        #{orderIp,jdbcType=BIGINT},
      </if>
      <if test="sellerRemark != null">
        #{sellerRemark,jdbcType=VARCHAR},
      </if>
      <if test="orderCreateTime != null">
        #{orderCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wow.order.model.SaleOrderExample" resultType="java.lang.Integer">
    select count(*) from sale_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sale_order
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.orderCode != null">
        order_code = #{record.orderCode,jdbcType=VARCHAR},
      </if>
      <if test="record.endUserId != null">
        end_user_id = #{record.endUserId,jdbcType=INTEGER},
      </if>
      <if test="record.productAmount != null">
        product_amount = #{record.productAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.deliveryFee != null">
        delivery_fee = #{record.deliveryFee,jdbcType=DECIMAL},
      </if>
      <if test="record.orderAmount != null">
        order_amount = #{record.orderAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.totalProductQty != null">
        total_product_qty = #{record.totalProductQty,jdbcType=INTEGER},
      </if>
      <if test="record.unShipOutQty != null">
        un_ship_out_qty = #{record.unShipOutQty,jdbcType=INTEGER},
      </if>
      <if test="record.receiverName != null">
        receiver_name = #{record.receiverName,jdbcType=VARCHAR},
      </if>
      <if test="record.receiverProvince != null">
        receiver_province = #{record.receiverProvince,jdbcType=VARCHAR},
      </if>
      <if test="record.receiverCity != null">
        receiver_city = #{record.receiverCity,jdbcType=VARCHAR},
      </if>
      <if test="record.receiverCounty != null">
        receiver_county = #{record.receiverCounty,jdbcType=VARCHAR},
      </if>
      <if test="record.receiverTown != null">
        receiver_town = #{record.receiverTown,jdbcType=VARCHAR},
      </if>
      <if test="record.receiverAddress != null">
        receiver_address = #{record.receiverAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.receiverPostcode != null">
        receiver_postcode = #{record.receiverPostcode,jdbcType=CHAR},
      </if>
      <if test="record.receiverMobile != null">
        receiver_mobile = #{record.receiverMobile,jdbcType=VARCHAR},
      </if>
      <if test="record.endUserRemark != null">
        end_user_remark = #{record.endUserRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.orderStatus != null">
        order_status = #{record.orderStatus,jdbcType=TINYINT},
      </if>
      <if test="record.paymentStatus != null">
        payment_status = #{record.paymentStatus,jdbcType=TINYINT},
      </if>
      <if test="record.paymentMethod != null">
        payment_method = #{record.paymentMethod,jdbcType=TINYINT},
      </if>
      <if test="record.paidTime != null">
        paid_time = #{record.paidTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isUseCoupon != null">
        is_use_coupon = #{record.isUseCoupon,jdbcType=BIT},
      </if>
      <if test="record.preferentialAmount != null">
        preferential_amount = #{record.preferentialAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.endUserCouponId != null">
        end_user_coupon_id = #{record.endUserCouponId,jdbcType=INTEGER},
      </if>
      <if test="record.cancelRequestTime != null">
        cancel_request_time = #{record.cancelRequestTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.cancelReason != null">
        cancel_reason = #{record.cancelReason,jdbcType=VARCHAR},
      </if>
      <if test="record.cancelApprovedTime != null">
        cancel_approved_time = #{record.cancelApprovedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.refundApprovalStatus != null">
        refund_approval_status = #{record.refundApprovalStatus,jdbcType=TINYINT},
      </if>
      <if test="record.refundApprovalTime != null">
        refund_approval_time = #{record.refundApprovalTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.operatorName != null">
        operator_name = #{record.operatorName,jdbcType=VARCHAR},
      </if>
      <if test="record.orderSource != null">
        order_source = #{record.orderSource,jdbcType=TINYINT},
      </if>
      <if test="record.orderIp != null">
        order_ip = #{record.orderIp,jdbcType=BIGINT},
      </if>
      <if test="record.sellerRemark != null">
        seller_remark = #{record.sellerRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.orderCreateTime != null">
        order_create_time = #{record.orderCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sale_order
    set id = #{record.id,jdbcType=INTEGER},
      order_code = #{record.orderCode,jdbcType=VARCHAR},
      end_user_id = #{record.endUserId,jdbcType=INTEGER},
      product_amount = #{record.productAmount,jdbcType=DECIMAL},
      delivery_fee = #{record.deliveryFee,jdbcType=DECIMAL},
      order_amount = #{record.orderAmount,jdbcType=DECIMAL},
      total_product_qty = #{record.totalProductQty,jdbcType=INTEGER},
      un_ship_out_qty = #{record.unShipOutQty,jdbcType=INTEGER},
      receiver_name = #{record.receiverName,jdbcType=VARCHAR},
      receiver_province = #{record.receiverProvince,jdbcType=VARCHAR},
      receiver_city = #{record.receiverCity,jdbcType=VARCHAR},
      receiver_county = #{record.receiverCounty,jdbcType=VARCHAR},
      receiver_town = #{record.receiverTown,jdbcType=VARCHAR},
      receiver_address = #{record.receiverAddress,jdbcType=VARCHAR},
      receiver_postcode = #{record.receiverPostcode,jdbcType=CHAR},
      receiver_mobile = #{record.receiverMobile,jdbcType=VARCHAR},
      end_user_remark = #{record.endUserRemark,jdbcType=VARCHAR},
      order_status = #{record.orderStatus,jdbcType=TINYINT},
      payment_status = #{record.paymentStatus,jdbcType=TINYINT},
      payment_method = #{record.paymentMethod,jdbcType=TINYINT},
      paid_time = #{record.paidTime,jdbcType=TIMESTAMP},
      is_use_coupon = #{record.isUseCoupon,jdbcType=BIT},
      preferential_amount = #{record.preferentialAmount,jdbcType=DECIMAL},
      end_user_coupon_id = #{record.endUserCouponId,jdbcType=INTEGER},
      cancel_request_time = #{record.cancelRequestTime,jdbcType=TIMESTAMP},
      cancel_reason = #{record.cancelReason,jdbcType=VARCHAR},
      cancel_approved_time = #{record.cancelApprovedTime,jdbcType=TIMESTAMP},
      refund_approval_status = #{record.refundApprovalStatus,jdbcType=TINYINT},
      refund_approval_time = #{record.refundApprovalTime,jdbcType=TIMESTAMP},
      operator_name = #{record.operatorName,jdbcType=VARCHAR},
      order_source = #{record.orderSource,jdbcType=TINYINT},
      order_ip = #{record.orderIp,jdbcType=BIGINT},
      seller_remark = #{record.sellerRemark,jdbcType=VARCHAR},
      order_create_time = #{record.orderCreateTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.wow.order.model.SaleOrder">
    update sale_order
    <set>
      <if test="orderCode != null">
        order_code = #{orderCode,jdbcType=VARCHAR},
      </if>
      <if test="endUserId != null">
        end_user_id = #{endUserId,jdbcType=INTEGER},
      </if>
      <if test="productAmount != null">
        product_amount = #{productAmount,jdbcType=DECIMAL},
      </if>
      <if test="deliveryFee != null">
        delivery_fee = #{deliveryFee,jdbcType=DECIMAL},
      </if>
      <if test="orderAmount != null">
        order_amount = #{orderAmount,jdbcType=DECIMAL},
      </if>
      <if test="totalProductQty != null">
        total_product_qty = #{totalProductQty,jdbcType=INTEGER},
      </if>
      <if test="unShipOutQty != null">
        un_ship_out_qty = #{unShipOutQty,jdbcType=INTEGER},
      </if>
      <if test="receiverName != null">
        receiver_name = #{receiverName,jdbcType=VARCHAR},
      </if>
      <if test="receiverProvince != null">
        receiver_province = #{receiverProvince,jdbcType=VARCHAR},
      </if>
      <if test="receiverCity != null">
        receiver_city = #{receiverCity,jdbcType=VARCHAR},
      </if>
      <if test="receiverCounty != null">
        receiver_county = #{receiverCounty,jdbcType=VARCHAR},
      </if>
      <if test="receiverTown != null">
        receiver_town = #{receiverTown,jdbcType=VARCHAR},
      </if>
      <if test="receiverAddress != null">
        receiver_address = #{receiverAddress,jdbcType=VARCHAR},
      </if>
      <if test="receiverPostcode != null">
        receiver_postcode = #{receiverPostcode,jdbcType=CHAR},
      </if>
      <if test="receiverMobile != null">
        receiver_mobile = #{receiverMobile,jdbcType=VARCHAR},
      </if>
      <if test="endUserRemark != null">
        end_user_remark = #{endUserRemark,jdbcType=VARCHAR},
      </if>
      <if test="orderStatus != null">
        order_status = #{orderStatus,jdbcType=TINYINT},
      </if>
      <if test="paymentStatus != null">
        payment_status = #{paymentStatus,jdbcType=TINYINT},
      </if>
      <if test="paymentMethod != null">
        payment_method = #{paymentMethod,jdbcType=TINYINT},
      </if>
      <if test="paidTime != null">
        paid_time = #{paidTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isUseCoupon != null">
        is_use_coupon = #{isUseCoupon,jdbcType=BIT},
      </if>
      <if test="preferentialAmount != null">
        preferential_amount = #{preferentialAmount,jdbcType=DECIMAL},
      </if>
      <if test="endUserCouponId != null">
        end_user_coupon_id = #{endUserCouponId,jdbcType=INTEGER},
      </if>
      <if test="cancelRequestTime != null">
        cancel_request_time = #{cancelRequestTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cancelReason != null">
        cancel_reason = #{cancelReason,jdbcType=VARCHAR},
      </if>
      <if test="cancelApprovedTime != null">
        cancel_approved_time = #{cancelApprovedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="refundApprovalStatus != null">
        refund_approval_status = #{refundApprovalStatus,jdbcType=TINYINT},
      </if>
      <if test="refundApprovalTime != null">
        refund_approval_time = #{refundApprovalTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operatorName != null">
        operator_name = #{operatorName,jdbcType=VARCHAR},
      </if>
      <if test="orderSource != null">
        order_source = #{orderSource,jdbcType=TINYINT},
      </if>
      <if test="orderIp != null">
        order_ip = #{orderIp,jdbcType=BIGINT},
      </if>
      <if test="sellerRemark != null">
        seller_remark = #{sellerRemark,jdbcType=VARCHAR},
      </if>
      <if test="orderCreateTime != null">
        order_create_time = #{orderCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wow.order.model.SaleOrder">
    update sale_order
    set order_code = #{orderCode,jdbcType=VARCHAR},
      end_user_id = #{endUserId,jdbcType=INTEGER},
      product_amount = #{productAmount,jdbcType=DECIMAL},
      delivery_fee = #{deliveryFee,jdbcType=DECIMAL},
      order_amount = #{orderAmount,jdbcType=DECIMAL},
      total_product_qty = #{totalProductQty,jdbcType=INTEGER},
      un_ship_out_qty = #{unShipOutQty,jdbcType=INTEGER},
      receiver_name = #{receiverName,jdbcType=VARCHAR},
      receiver_province = #{receiverProvince,jdbcType=VARCHAR},
      receiver_city = #{receiverCity,jdbcType=VARCHAR},
      receiver_county = #{receiverCounty,jdbcType=VARCHAR},
      receiver_town = #{receiverTown,jdbcType=VARCHAR},
      receiver_address = #{receiverAddress,jdbcType=VARCHAR},
      receiver_postcode = #{receiverPostcode,jdbcType=CHAR},
      receiver_mobile = #{receiverMobile,jdbcType=VARCHAR},
      end_user_remark = #{endUserRemark,jdbcType=VARCHAR},
      order_status = #{orderStatus,jdbcType=TINYINT},
      payment_status = #{paymentStatus,jdbcType=TINYINT},
      payment_method = #{paymentMethod,jdbcType=TINYINT},
      paid_time = #{paidTime,jdbcType=TIMESTAMP},
      is_use_coupon = #{isUseCoupon,jdbcType=BIT},
      preferential_amount = #{preferentialAmount,jdbcType=DECIMAL},
      end_user_coupon_id = #{endUserCouponId,jdbcType=INTEGER},
      cancel_request_time = #{cancelRequestTime,jdbcType=TIMESTAMP},
      cancel_reason = #{cancelReason,jdbcType=VARCHAR},
      cancel_approved_time = #{cancelApprovedTime,jdbcType=TIMESTAMP},
      refund_approval_status = #{refundApprovalStatus,jdbcType=TINYINT},
      refund_approval_time = #{refundApprovalTime,jdbcType=TIMESTAMP},
      operator_name = #{operatorName,jdbcType=VARCHAR},
      order_source = #{orderSource,jdbcType=TINYINT},
      order_ip = #{orderIp,jdbcType=BIGINT},
      seller_remark = #{sellerRemark,jdbcType=VARCHAR},
      order_create_time = #{orderCreateTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
      <!-- 查询用户订单列表 -->
  <select id="selectListPage"   resultType="com.wow.common.page.PageData"  parameterType="com.wow.common.page.PageModel" >
	    select 
	          id orderId, order_code orderCode, order_amount orderAmount, total_product_qty totalProductQty, 
	          order_status orderStatus,order_create_time orderCreateTime
	    from sale_order
	    <where>
	       end_user_id=#{model.endUserId}
	       <if test="model.orderStatus != null">
            and order_status = #{model.orderStatus}
      </if>
	    </where>
	    order by order_create_time desc
  </select>
  
        <!-- 查询超过20分钟仍然没有支付的订单列表 -->
  <select id="selectTimeOutUnpayOrder"   resultType="com.wow.order.model.SaleOrder"  parameterType="Integer" >
	      SELECT 
			  t.id id ,t.order_code orderCode,t.order_create_time orderCreateTime
			FROM
			  sale_order t 
			WHERE TIMESTAMPDIFF(MINUTE, t.order_create_time, NOW()) >=#{timeout}
			  AND t.order_status = 0 AND t.payment_status=2
  </select>
  
        <!-- 后台 用户订单列表查询 -->
  <select id="selectForAdminListPage"   resultType="com.wow.common.page.PageData"  parameterType="com.wow.common.page.PageModel" >
				SELECT 
					  so.id orderId,
					  so.order_code orderCode,
					  so.order_amount orderAmount,
					  so.delivery_fee deliveryFee,	
					  so.receiver_name receiverName,
					  so.receiver_mobile receiverMobile,
					  so.order_status orderStatus,
					  so.order_create_time orderCreateTime 
				FROM
	            sale_order so
        <where>
             <if test="model.orderCode!= null  and model.orderCode!=''">
                    so.order_code=#{model.orderCode}
              </if>
              <if test="model.receiverName!= null  and model.receiverName!=''">
                    AND so.receiver_name like concat('%',#{model.receiverName},'%')
              </if>
               <if test="model.receiverMobile!= null  and model.receiverMobile!=''">
                     AND so.receiver_mobile =#{model.receiverMobile}
              </if>
                <if test="model.paymentMethod!= null">
                     AND so.payment_method =#{model.paymentMethod}
              </if>
               <if test="model.beginDateFormat!= null  and model.endDateFormat!=null">
                     AND so.order_create_time BETWEEN #{model.beginDateFormat} AND #{model.endDateFormat}
              </if>
                <if test="model.orderStatus != null">
                     AND so.order_status = #{model.orderStatus}
                </if>
                 <if test="model.endUserId!= null">
                     AND so.end_user_id = #{model.endUserId}
                </if>
                <if test="model.productName!= null  and model.productName!=''">
	                   AND EXISTS 
						  (SELECT 
						    1 
						  FROM
						    sale_order_item soi
						  WHERE soi.product_name like  concat('%',#{model.productName},'%')
						    AND soi.sale_order_id = so.id)
              </if>
	    </where>
	         order by so.order_create_time desc
  </select>
  
</mapper>