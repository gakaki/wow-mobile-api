<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wow.order.mapper.SaleOrderPayMapper" >
  <resultMap id="BaseResultMap" type="com.wow.order.model.SaleOrderPay" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="sale_order_id" property="saleOrderId" jdbcType="INTEGER" />
    <result column="order_code" property="orderCode" jdbcType="VARCHAR" />
    <result column="transaction_no" property="transactionNo" jdbcType="VARCHAR" />
    <result column="channel" property="channel" jdbcType="BIT" />
    <result column="amount" property="amount" jdbcType="DECIMAL" />
    <result column="time_paid" property="timePaid" jdbcType="TIMESTAMP" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, sale_order_id, order_code, transaction_no, channel, amount, time_paid, description, 
    create_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.wow.order.model.SaleOrderPayExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sale_order_pay
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sale_order_pay
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sale_order_pay
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.wow.order.model.SaleOrderPayExample" >
    delete from sale_order_pay
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.wow.order.model.SaleOrderPay" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sale_order_pay (sale_order_id, order_code, transaction_no, 
      channel, amount, time_paid, 
      description, create_time)
    values (#{saleOrderId,jdbcType=INTEGER}, #{orderCode,jdbcType=VARCHAR}, #{transactionNo,jdbcType=VARCHAR}, 
      #{channel,jdbcType=BIT}, #{amount,jdbcType=DECIMAL}, #{timePaid,jdbcType=TIMESTAMP}, 
      #{description,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.wow.order.model.SaleOrderPay" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sale_order_pay
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="saleOrderId != null" >
        sale_order_id,
      </if>
      <if test="orderCode != null" >
        order_code,
      </if>
      <if test="transactionNo != null" >
        transaction_no,
      </if>
      <if test="channel != null" >
        channel,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="timePaid != null" >
        time_paid,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="saleOrderId != null" >
        #{saleOrderId,jdbcType=INTEGER},
      </if>
      <if test="orderCode != null" >
        #{orderCode,jdbcType=VARCHAR},
      </if>
      <if test="transactionNo != null" >
        #{transactionNo,jdbcType=VARCHAR},
      </if>
      <if test="channel != null" >
        #{channel,jdbcType=BIT},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="timePaid != null" >
        #{timePaid,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wow.order.model.SaleOrderPayExample" resultType="java.lang.Integer" >
    select count(*) from sale_order_pay
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sale_order_pay
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.saleOrderId != null" >
        sale_order_id = #{record.saleOrderId,jdbcType=INTEGER},
      </if>
      <if test="record.orderCode != null" >
        order_code = #{record.orderCode,jdbcType=VARCHAR},
      </if>
      <if test="record.transactionNo != null" >
        transaction_no = #{record.transactionNo,jdbcType=VARCHAR},
      </if>
      <if test="record.channel != null" >
        channel = #{record.channel,jdbcType=BIT},
      </if>
      <if test="record.amount != null" >
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.timePaid != null" >
        time_paid = #{record.timePaid,jdbcType=TIMESTAMP},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sale_order_pay
    set id = #{record.id,jdbcType=INTEGER},
      sale_order_id = #{record.saleOrderId,jdbcType=INTEGER},
      order_code = #{record.orderCode,jdbcType=VARCHAR},
      transaction_no = #{record.transactionNo,jdbcType=VARCHAR},
      channel = #{record.channel,jdbcType=BIT},
      amount = #{record.amount,jdbcType=DECIMAL},
      time_paid = #{record.timePaid,jdbcType=TIMESTAMP},
      description = #{record.description,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.wow.order.model.SaleOrderPay" >
    update sale_order_pay
    <set >
      <if test="saleOrderId != null" >
        sale_order_id = #{saleOrderId,jdbcType=INTEGER},
      </if>
      <if test="orderCode != null" >
        order_code = #{orderCode,jdbcType=VARCHAR},
      </if>
      <if test="transactionNo != null" >
        transaction_no = #{transactionNo,jdbcType=VARCHAR},
      </if>
      <if test="channel != null" >
        channel = #{channel,jdbcType=BIT},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="timePaid != null" >
        time_paid = #{timePaid,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wow.order.model.SaleOrderPay" >
    update sale_order_pay
    set sale_order_id = #{saleOrderId,jdbcType=INTEGER},
      order_code = #{orderCode,jdbcType=VARCHAR},
      transaction_no = #{transactionNo,jdbcType=VARCHAR},
      channel = #{channel,jdbcType=BIT},
      amount = #{amount,jdbcType=DECIMAL},
      time_paid = #{timePaid,jdbcType=TIMESTAMP},
      description = #{description,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>