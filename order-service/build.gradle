group 'com.wow'
version '1.0-SNAPSHOT'

configurations {
    mybatisGenerator
}

dependencies {
    mybatisGenerator 'org.mybatis.generator:mybatis-generator-core:1.3.2'
    mybatisGenerator 'mysql:mysql-connector-java:5.1.35'
    compile 'org.mybatis.generator:mybatis-generator:1.3.2'
    compile 'com.github.pagehelper:pagehelper:4.1.1'
    compile 'mysql:mysql-connector-java:6.0.2'

    //业务依赖
    compile 'com.wow:product-service:1.0-SNAPSHOT'
    compile 'com.wow:user-service:1.0-SNAPSHOT'
    compile 'com.wow:marketing-service:1.0-SNAPSHOT'
    compile 'com.wow:price-service:1.0-SNAPSHOT'
    compile 'com.wow:stock-service:1.0-SNAPSHOT'
    compile 'com.wow:common-util:1.0-SNAPSHOT'
}

def getDbProperties = {
    def properties = new Properties()
    file("src/main/resources/generator/mysql.properties").withInputStream { inputStream ->
        properties.load(inputStream)
    }
    properties;
}


task dbgen << {

    def properties = getDbProperties()

    ant.properties['targetProject'] = projectDir.path
    ant.properties['driverClass'] = properties.getProperty("jdbc.driverClassName")
    ant.properties['connectionURL'] = properties.getProperty("jdbc.url")
    ant.properties['userId'] = properties.getProperty("jdbc.user")
    ant.properties['password'] = properties.getProperty("jdbc.pass")
    ant.properties['src_main_java'] = sourceSets.main.java.srcDirs[0].path
    ant.properties['src_main_resources'] = sourceSets.main.resources.srcDirs[0].path
    ant.properties['modelPackage'] = this.modelPackage
    ant.properties['mapperPackage'] = this.mapperPackage
    ant.properties['sqlMapperPackage'] = this.sqlMapperPackage

    ant.taskdef(
            name: 'mbgenerator',
            classname: 'org.mybatis.generator.ant.GeneratorAntTask',
            classpath: configurations.mybatisGenerator.asPath
    )
    ant.mbgenerator(overwrite: false,
            configfile: 'src/main/resources/generator/generatorConfig.xml', verbose: true) {
        propertyset {
            propertyref(name: 'targetProject')
            propertyref(name: 'userId')
            propertyref(name: 'driverClass')
            propertyref(name: 'connectionURL')
            propertyref(name: 'password')
            propertyref(name: 'src_main_java')
            propertyref(name: 'src_main_resources')
            propertyref(name: 'modelPackage')
            propertyref(name: 'mapperPackage')
            propertyref(name: 'sqlMapperPackage')

        }
    }
}