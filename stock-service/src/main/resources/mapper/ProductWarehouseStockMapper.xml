<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wow.stock.mapper.ProductWarehouseStockMapper">
    <resultMap id="BaseResultMap" type="com.wow.stock.model.ProductWarehouseStock">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="product_id" property="productId" jdbcType="INTEGER"/>
        <result column="warehouse_id" property="warehouseId" jdbcType="INTEGER"/>
        <result column="real_stock" property="realStock" jdbcType="SMALLINT"/>
        <result column="frozen_stock" property="frozenStock" jdbcType="SMALLINT"/>
        <result column="is_active" property="isActive" jdbcType="BIT"/>
        <result column="create_date" property="createDate" jdbcType="TIMESTAMP"/>
        <result column="update_date" property="updateDate" jdbcType="TIMESTAMP"/>
        <result column="is_deleted" property="isDeleted" jdbcType="BIT"/>
        <result column="lock_stock" property="lockStock" jdbcType="SMALLINT"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, product_id, warehouse_id, real_stock, frozen_stock, is_active, create_date, update_date,
        is_deleted, lock_stock
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from product_warehouse_stock
        where id = #{id,jdbcType=INTEGER}
    </select>
    <insert id="insert" parameterType="com.wow.stock.model.ProductWarehouseStock">
        <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into product_warehouse_stock (product_id, warehouse_id, real_stock,
        frozen_stock, is_active, create_date,
        update_date, is_deleted, lock_stock
        )
        values (#{productId,jdbcType=INTEGER}, #{warehouseId,jdbcType=INTEGER}, #{realStock,jdbcType=SMALLINT},
        #{frozenStock,jdbcType=SMALLINT}, #{isActive,jdbcType=BIT}, #{createDate,jdbcType=TIMESTAMP},
        #{updateDate,jdbcType=TIMESTAMP}, #{isDeleted,jdbcType=BIT}, #{lockStock,jdbcType=SMALLINT}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.wow.stock.model.ProductWarehouseStock">
        <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into product_warehouse_stock
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="productId != null">
                product_id,
            </if>
            <if test="warehouseId != null">
                warehouse_id,
            </if>
            <if test="realStock != null">
                real_stock,
            </if>
            <if test="frozenStock != null">
                frozen_stock,
            </if>
            <if test="isActive != null">
                is_active,
            </if>
            <if test="createDate != null">
                create_date,
            </if>
            <if test="updateDate != null">
                update_date,
            </if>
            <if test="isDeleted != null">
                is_deleted,
            </if>
            <if test="lockStock != null">
                lock_stock,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="productId != null">
                #{productId,jdbcType=INTEGER},
            </if>
            <if test="warehouseId != null">
                #{warehouseId,jdbcType=INTEGER},
            </if>
            <if test="realStock != null">
                #{realStock,jdbcType=SMALLINT},
            </if>
            <if test="frozenStock != null">
                #{frozenStock,jdbcType=SMALLINT},
            </if>
            <if test="isActive != null">
                #{isActive,jdbcType=BIT},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateDate != null">
                #{updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="isDeleted != null">
                #{isDeleted,jdbcType=BIT},
            </if>
            <if test="lockStock != null">
                #{lockStock,jdbcType=SMALLINT},
            </if>
        </trim>
    </insert>
</mapper>