<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wow.stock.mapper.ProductWarehouseStockMapper" >
  <resultMap id="BaseResultMap" type="com.wow.stock.model.ProductWarehouseStock" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="product_id" property="productId" jdbcType="INTEGER" />
    <result column="warehouse_id" property="warehouseId" jdbcType="INTEGER" />
    <result column="real_stock_qty" property="realStockQty" jdbcType="SMALLINT" />
    <result column="frozen_stock_qty" property="frozenStockQty" jdbcType="SMALLINT" />
    <result column="lock_stock_qty" property="lockStockQty" jdbcType="SMALLINT" />
    <result column="is_active" property="isActive" jdbcType="BIT" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="is_deleted" property="isDeleted" jdbcType="BIT" />
  </resultMap>

  <resultMap id="WarehouseStockVo" type="com.wow.stock.vo.WarehouseStockVo">

  </resultMap>

  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, product_id, warehouse_id, real_stock_qty, frozen_stock_qty, lock_stock_qty, is_active, 
    create_date, update_date, is_deleted
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.wow.stock.model.ProductWarehouseStockExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product_warehouse_stock
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from product_warehouse_stock
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from product_warehouse_stock
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.wow.stock.model.ProductWarehouseStockExample" >
    delete from product_warehouse_stock
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.wow.stock.model.ProductWarehouseStock" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into product_warehouse_stock (product_id, warehouse_id, real_stock_qty, 
      frozen_stock_qty, lock_stock_qty, is_active, 
      create_date, update_date, is_deleted
      )
    values (#{productId,jdbcType=INTEGER}, #{warehouseId,jdbcType=INTEGER}, #{realStockQty,jdbcType=SMALLINT}, 
      #{frozenStockQty,jdbcType=SMALLINT}, #{lockStockQty,jdbcType=SMALLINT}, #{isActive,jdbcType=BIT}, 
      #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}, #{isDeleted,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.wow.stock.model.ProductWarehouseStock" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into product_warehouse_stock
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="productId != null" >
        product_id,
      </if>
      <if test="warehouseId != null" >
        warehouse_id,
      </if>
      <if test="realStockQty != null" >
        real_stock_qty,
      </if>
      <if test="frozenStockQty != null" >
        frozen_stock_qty,
      </if>
      <if test="lockStockQty != null" >
        lock_stock_qty,
      </if>
      <if test="isActive != null" >
        is_active,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="isDeleted != null" >
        is_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="productId != null" >
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="warehouseId != null" >
        #{warehouseId,jdbcType=INTEGER},
      </if>
      <if test="realStockQty != null" >
        #{realStockQty,jdbcType=SMALLINT},
      </if>
      <if test="frozenStockQty != null" >
        #{frozenStockQty,jdbcType=SMALLINT},
      </if>
      <if test="lockStockQty != null" >
        #{lockStockQty,jdbcType=SMALLINT},
      </if>
      <if test="isActive != null" >
        #{isActive,jdbcType=BIT},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null" >
        #{isDeleted,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wow.stock.model.ProductWarehouseStockExample" resultType="java.lang.Integer" >
    select count(*) from product_warehouse_stock
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update product_warehouse_stock
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.productId != null" >
        product_id = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.warehouseId != null" >
        warehouse_id = #{record.warehouseId,jdbcType=INTEGER},
      </if>
      <if test="record.realStockQty != null" >
        real_stock_qty = #{record.realStockQty,jdbcType=SMALLINT},
      </if>
      <if test="record.frozenStockQty != null" >
        frozen_stock_qty = #{record.frozenStockQty,jdbcType=SMALLINT},
      </if>
      <if test="record.lockStockQty != null" >
        lock_stock_qty = #{record.lockStockQty,jdbcType=SMALLINT},
      </if>
      <if test="record.isActive != null" >
        is_active = #{record.isActive,jdbcType=BIT},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateDate != null" >
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDeleted != null" >
        is_deleted = #{record.isDeleted,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update product_warehouse_stock
    set id = #{record.id,jdbcType=INTEGER},
      product_id = #{record.productId,jdbcType=INTEGER},
      warehouse_id = #{record.warehouseId,jdbcType=INTEGER},
      real_stock_qty = #{record.realStockQty,jdbcType=SMALLINT},
      frozen_stock_qty = #{record.frozenStockQty,jdbcType=SMALLINT},
      lock_stock_qty = #{record.lockStockQty,jdbcType=SMALLINT},
      is_active = #{record.isActive,jdbcType=BIT},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      is_deleted = #{record.isDeleted,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.wow.stock.model.ProductWarehouseStock" >
    update product_warehouse_stock
    <set >
      <if test="productId != null" >
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="warehouseId != null" >
        warehouse_id = #{warehouseId,jdbcType=INTEGER},
      </if>
      <if test="realStockQty != null" >
        real_stock_qty = #{realStockQty,jdbcType=SMALLINT},
      </if>
      <if test="frozenStockQty != null" >
        frozen_stock_qty = #{frozenStockQty,jdbcType=SMALLINT},
      </if>
      <if test="lockStockQty != null" >
        lock_stock_qty = #{lockStockQty,jdbcType=SMALLINT},
      </if>
      <if test="isActive != null" >
        is_active = #{isActive,jdbcType=BIT},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null" >
        is_deleted = #{isDeleted,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wow.stock.model.ProductWarehouseStock" >
    update product_warehouse_stock
    set product_id = #{productId,jdbcType=INTEGER},
      warehouse_id = #{warehouseId,jdbcType=INTEGER},
      real_stock_qty = #{realStockQty,jdbcType=SMALLINT},
      frozen_stock_qty = #{frozenStockQty,jdbcType=SMALLINT},
      lock_stock_qty = #{lockStockQty,jdbcType=SMALLINT},
      is_active = #{isActive,jdbcType=BIT},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="adjustWarehouseRealStock">
    update product_warehouse_stock
    set real_stock_qty = real_stock_qty + #{adjustNum,jdbcType=SMALLINT},
    update_date = now()
    where product_id = #{productId,jdbcType=INTEGER}
    and warehouse_id= #{warehouseId,jdbcType=INTEGER}
    and is_active = true
    and is_deleted = false
  </update>

  <update id="freezeWarehouseStock">
    update product_warehouse_stock
    set frozen_stock_qty = frozen_stock_qty + #{productQty,jdbcType=SMALLINT},
    update_date = now()
    where product_id = #{productId,jdbcType=INTEGER}
    and warehouse_id= #{warehouseId,jdbcType=INTEGER}
    and (real_stock_qty - lock_stock_qty) - (frozen_stock_qty + #{productQty,jdbcType=SMALLINT}) >= 0 <!--防止超卖-->
    and is_active = true
    and is_deleted = false
  </update>

  <update id="unfreezeWarehouseStock">
    update product_warehouse_stock
    set frozen_stock_qty = frozen_stock_qty - #{productQty,jdbcType=SMALLINT},
    update_date = now()
    where product_id = #{productId,jdbcType=INTEGER}
    and warehouse_id= #{warehouseId,jdbcType=INTEGER}
    and is_active = true
    and is_deleted = false
  </update>

  <select id="getWarehouseAvailableStock" parameterType="java.lang.Integer" resultType="com.wow.stock.vo.WarehouseStockVo">
    select product_id productId, warehouse_id warehouseId, (real_stock_qty - lock_stock_qty - frozen_stock_qty) availableStock
    from product_warehouse_stock
    where product_id = #{productId,jdbcType=INTEGER}
    and is_active = true
    and is_deleted = false
  </select>

  <select id="getWarehouseAvailableStocks" parameterType="java.util.List" resultType="com.wow.stock.vo.WarehouseStockVo" >
    select product_id productId, warehouse_id warehouseId, (real_stock_qty - lock_stock_qty - frozen_stock_qty) availableStock
    from product_warehouse_stock
    <where>
      product_id in
      <foreach collection="productIds" item="productId" index="index" open="(" separator="," close=")">#{productId}</foreach>
    </where>
    and is_active = true
    and is_deleted = false
  </select>

  <update id="shipOutWarehouseGoods">
    update product_warehouse_stock
    set frozen_stock_qty = frozen_stock_qty - #{productQty,jdbcType=SMALLINT},
    real_stock_qty = real_stock_qty - #{productQty,jdbcType=SMALLINT},
    update_date = now()
    where product_id = #{productId,jdbcType=INTEGER}
    and warehouse_id= #{warehouseId,jdbcType=INTEGER}
    and is_active = true
    and is_deleted = false
  </update>

  <select id="selectWarehouseByProductId" parameterType="java.util.List" resultType="java.lang.Integer" >
    select warehouse_id,
    from product_warehouse_stock
    where product_id = #{productId,jdbcType=INTEGER}
    and is_active = true
    and is_deleted = false
  </select>

</mapper>